{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\components\\\\UserInformation.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FetchData } from \"../utils/helper\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nexport default (() => {\n  const settings = useSelector(state => state.settings);\n  const credentials = useSelector(state => state.credentials);\n  const {\n    0: [user],\n    1: setUser\n  } = useState(\"\");\n  let getUserInformation = FetchData(\"GET\", settings.url, {\n    operation: \"query\",\n    sessionName: credentials.sessionName,\n    query: `SELECT user_name, first_name, last_name FROM Users WHERE id = ${credentials.userId};`\n  }).then(res => {\n    setUser([res.result]);\n  });\n  console.log(user);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"User Information\"), user != undefined && __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, `Username: ${user.first_name} ${user.last_name}`), __jsx(\"p\", {\n    className: \"ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, `Name: ${user.user_name}`)));\n});","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/components/UserInformation.js"],"names":["FetchData","useSelector","useState","useEffect","settings","state","credentials","user","setUser","getUserInformation","url","operation","sessionName","query","userId","then","res","result","console","log","undefined","first_name","last_name","user_name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAe,MAAM;AACnB,QAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAME,WAAW,GAAGL,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA/B;AACA,QAAM;AAAA,OAAC,CAACC,IAAD,CAAD;AAAA,OAASC;AAAT,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIO,kBAAkB,GAAGT,SAAS,CAAC,KAAD,EAAQI,QAAQ,CAACM,GAAjB,EAAsB;AACtDC,IAAAA,SAAS,EAAE,OAD2C;AAEtDC,IAAAA,WAAW,EAAEN,WAAW,CAACM,WAF6B;AAGtDC,IAAAA,KAAK,EAAG,iEAAgEP,WAAW,CAACQ,MAAO;AAHrC,GAAtB,CAAT,CAItBC,IAJsB,CAIhBC,GAAD,IAAS;AACfR,IAAAA,OAAO,CAAC,CAACQ,GAAG,CAACC,MAAL,CAAD,CAAP;AACD,GANwB,CAAzB;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGA,IAAI,IAAIa,SAAR,IACC,4BACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,aAAYb,IAAI,CAACc,UAAW,IAAGd,IAAI,CAACe,SAAU,EAApE,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,SAAQf,IAAI,CAACgB,SAAU,EAA7C,CAFF,CAHJ,CADF;AAWD,CAzBD","sourcesContent":["import { FetchData } from \"../utils/helper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default () => {\r\n  const settings = useSelector((state) => state.settings);\r\n  const credentials = useSelector((state) => state.credentials);\r\n  const [[user], setUser] = useState(\"\");\r\n\r\n  let getUserInformation = FetchData(\"GET\", settings.url, {\r\n    operation: \"query\",\r\n    sessionName: credentials.sessionName,\r\n    query: `SELECT user_name, first_name, last_name FROM Users WHERE id = ${credentials.userId};`,\r\n  }).then((res) => {\r\n    setUser([res.result]);\r\n  });\r\n\r\n  console.log(user);\r\n  return (\r\n    <React.Fragment>\r\n      <h4>User Information</h4>\r\n      {user != undefined && (\r\n        <>\r\n          <p className=\"ml-4\">{`Username: ${user.first_name} ${user.last_name}`}</p>\r\n          <p className=\"ml-4\">{`Name: ${user.user_name}`}</p>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}