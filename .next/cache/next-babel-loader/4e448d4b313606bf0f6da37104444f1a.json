{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\pages\\\\tickets.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport MainLayout from \"../Layouts/MainLayout\";\nimport { connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport { FetchData } from \"../utils/helper\";\n\nvar Cell = function Cell(_ref) {\n  _s();\n\n  var id = _ref.id;\n  var credentials = useSelector(function (state) {\n    return state.credentials;\n  });\n  var settings = useSelector(function (state) {\n    return state.settings;\n  });\n  var queryData = GetQueryData(id.replace(/([x]\\d).*/, \"\"));\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cellData = _useState4[0],\n      setCellData = _useState4[1];\n\n  useEffect(function () {\n    setResult(\"SELECT \".concat(queryData.column, \" FROM \").concat(queryData.name, \" WHERE id = \").concat(id, \";\"));\n  }, [queryData]);\n  useEffect(function () {\n    FetchData(\"GET\", settings.url, {\n      operation: \"query\",\n      sessionName: credentials.sessionName,\n      query: result\n    }).then(function (res) {\n      console.log(res);\n    }); //   fetch(\n    //     settings.url +\n    //       `/webservice.php?${encodeFormData({\n    //         operation: \"query\",\n    //         sessionName: credentials.sessionName,\n    //         query: result,\n    //       })}`,\n    //     {\n    //       header: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\",\n    //         Mode: \"no-cors\",\n    //       },\n    //     }\n    //   )\n    //     .then((res) => {\n    //       try {\n    //         if (res.ok) return res.json();\n    //       } catch (err) {\n    //         console.warn(e);\n    //       }\n    //     })\n    //     .then((data) => {\n    //       setCellData(data.result);\n    //     });\n  }, [result]);\n  return __jsx(React.Fragment, null, __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, cellData ? cellData[0][Object.keys(cellData[0])[0]] : \"\"));\n};\n\n_s(Cell, \"gWEE/AhEr3lRHONaodJFVsn7CNk=\", true);\n\n_c = Cell;\n\nvar Row = function Row(_ref2) {\n  var data = _ref2.data;\n  return __jsx(React.Fragment, null, data.map(function (data, i) {\n    return __jsx(\"tr\", {\n      key: i,\n      id: data.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, data.id.replace(/.(\\d[x])/, \"\")), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, data.ticket_no), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, data.ticket_title), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, data.ticketpriorities), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, data.ticketstatus));\n  }));\n};\n\n_c2 = Row;\n\nvar tickets = /*#__PURE__*/function (_Component) {\n  _inherits(tickets, _Component);\n\n  var _super = _createSuper(tickets);\n\n  function tickets() {\n    var _this2;\n\n    _classCallCheck(this, tickets);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      list: []\n    });\n\n    return _this2;\n  }\n\n  _createClass(tickets, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      FetchData(\"GET\", this.props.settings.url, {\n        operation: \"query\",\n        sessionName: this.props.credentials.sessionName,\n        query: \"SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;\"\n      }).then(function (res) {\n        _this3.setState({\n          list: res.result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(MainLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"p-4 shadow rounded bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, \"Tickets\"), __jsx(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, __jsx(\"table\", {\n        className: \"table-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, \"ID\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, \"Number\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Title\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, \"Organization\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, \"Priority\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, \"Status\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, \"Assigned To\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, \"Modified By\"))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, this.state.list && __jsx(Row, {\n        data: this.state.list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 39\n        }\n      })))))));\n    }\n  }]);\n\n  return tickets;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.settings,\n    credentials: state.credentials,\n    userInfo: state.userInfo\n  };\n};\n\nexport default connect(mapStateToProps)(tickets);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/pages/tickets.js"],"names":["MainLayout","connect","Component","FetchData","Cell","id","credentials","useSelector","state","settings","queryData","GetQueryData","replace","useState","result","setResult","cellData","setCellData","useEffect","column","name","url","operation","sessionName","query","then","res","console","log","Object","keys","Row","data","map","i","ticket_no","ticket_title","ticketpriorities","ticketstatus","tickets","list","props","setState","mapStateToProps","userInfo"],"mappings":"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","sourcesContent":["import MainLayout from \"../Layouts/MainLayout\";\r\nimport { connect } from \"react-redux\";\r\nimport { Component } from \"react\";\r\nimport { FetchData } from \"../utils/helper\";\r\n\r\nconst Cell = ({ id }) => {\r\n  let credentials = useSelector((state) => state.credentials);\r\n  let settings = useSelector((state) => state.settings);\r\n  let queryData = GetQueryData(id.replace(/([x]\\d).*/, \"\"));\r\n  const [result, setResult] = useState(\"\");\r\n  const [cellData, setCellData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setResult(\r\n      `SELECT ${queryData.column} FROM ${queryData.name} WHERE id = ${id};`\r\n    );\r\n  }, [queryData]);\r\n\r\n  useEffect(() => {\r\n    FetchData(\"GET\", settings.url, {\r\n      operation: \"query\",\r\n      sessionName: credentials.sessionName,\r\n      query: result,\r\n    }).then((res) => {\r\n      console.log(res);\r\n    });\r\n    //   fetch(\r\n    //     settings.url +\r\n    //       `/webservice.php?${encodeFormData({\r\n    //         operation: \"query\",\r\n    //         sessionName: credentials.sessionName,\r\n    //         query: result,\r\n    //       })}`,\r\n    //     {\r\n    //       header: {\r\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    //         Mode: \"no-cors\",\r\n    //       },\r\n    //     }\r\n    //   )\r\n    //     .then((res) => {\r\n    //       try {\r\n    //         if (res.ok) return res.json();\r\n    //       } catch (err) {\r\n    //         console.warn(e);\r\n    //       }\r\n    //     })\r\n    //     .then((data) => {\r\n    //       setCellData(data.result);\r\n    //     });\r\n  }, [result]);\r\n  return (\r\n    <>\r\n      <td className=\"border px-4 py-2\">\r\n        {cellData ? cellData[0][Object.keys(cellData[0])[0]] : \"\"}\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Row = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.map((data, i) => {\r\n        return (\r\n          <tr key={i} id={data.id}>\r\n            <td className=\"border px-4 py-2\">\r\n              {data.id.replace(/.(\\d[x])/, \"\")}\r\n            </td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_no}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_title}</td>\r\n            {/* <Cell id={data.parent_id} /> */}\r\n            <td className=\"border px-4 py-2\">{data.ticketpriorities}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticketstatus}</td>\r\n            {/* <Cell id={data.assigned_user_id} /> */}\r\n            {/* <Cell id={data.modifiedby} /> */}\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nclass tickets extends Component {\r\n  state = {\r\n    list: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    FetchData(\"GET\", this.props.settings.url, {\r\n      operation: \"query\",\r\n      sessionName: this.props.credentials.sessionName,\r\n      query: `SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;`,\r\n    }).then((res) => {\r\n      this.setState({ list: res.result });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"p-4 shadow rounded bg-white\">\r\n          <h1>Tickets</h1>\r\n          <div className=\"flex\">\r\n            <div>\r\n              <table className=\"table-auto\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"px-4 py-2\">ID</th>\r\n                    <th className=\"px-4 py-2\">Number</th>\r\n                    <th className=\"px-4 py-2\">Title</th>\r\n                    <th className=\"px-4 py-2\">Organization</th>\r\n                    <th className=\"px-4 py-2\">Priority</th>\r\n                    <th className=\"px-4 py-2\">Status</th>\r\n                    <th className=\"px-4 py-2\">Assigned To</th>\r\n                    <th className=\"px-4 py-2\">Modified By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.list && <Row data={this.state.list} />}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <div className=\"shadow rounded p-4 ml-2\">\r\n                  <h1>Add new record</h1>\r\n                </div> */}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    credentials: state.credentials,\r\n    userInfo: state.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(tickets);\r\n"]},"metadata":{},"sourceType":"module"}