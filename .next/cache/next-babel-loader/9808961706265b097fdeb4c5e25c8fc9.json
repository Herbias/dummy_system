{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\Layouts\\\\MainLayout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from \"react\";\nimport Navigation from \"../components/Navigation\";\nimport SettingsModal from \"../components/SettingsModal\";\nimport { connect } from \"react-redux\";\nimport { SetSettings, SetCredential } from \"../redux/action\";\n\nclass MainLayout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showModal: false,\n      accessKey: \"\"\n    });\n\n    _defineProperty(this, \"showModal\", () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        showModal: !this.state.showModal,\n        accessKey: \"\"\n      }));\n    });\n\n    _defineProperty(this, \"createSettings\", data => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        showModal: !this.state.showModal\n      }));\n      this.props.SetSettings(data);\n    });\n  }\n\n  getChallenge() {\n    let a = FetchData(this.props.settings.url, {\n      operation: \"getchallenge\",\n      username: this.props.settings.user\n    }).then(res => {\n      if (res.success) {\n        this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n          accessKey: md5(res.result.token + this.props.settings.accessKey)\n        }));\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.settings !== this.props.settings) {\n      this.getChallenge();\n    }\n\n    if (accessKey) {}\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Navigation, {\n      Show: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), this.props.children, this.state.showModal && __jsx(SettingsModal, {\n      SetSettings: this.createSettings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nlet FetchData = (url, data) => {\n  return new Promise((resolve, reject) => {\n    switch (method) {\n      case \"GET\":\n        fetch(url + `/webservice.php?${encodeFormData(data)}`, {\n          header: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            Mode: \"no-cors\"\n          }\n        }).then(res => {\n          try {\n            if (res.ok) return res.json();\n          } catch (err) {\n            console.warn(e);\n          }\n        }).then(data => {\n          resolve(data);\n        });\n        break;\n\n      case \"POST\":\n        let body = encodeFormData({\n          operation: \"login\",\n          username: data.user,\n          accessKey: data.accessKey\n        });\n        fetch(settings.url + `/webservice.php`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: body\n        }).then(res => {\n          try {\n            if (res.ok) return res.json();\n          } catch (err) {\n            console.warn(e);\n          }\n        }).then(data => {\n          resolve(data);\n        });\n        break;\n    }\n  });\n};\n\nconst encodeFormData = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst mapDispatchToProps = {\n  SetSettings\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    settings: state.settings\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/Layouts/MainLayout.js"],"names":["Component","Navigation","SettingsModal","connect","SetSettings","SetCredential","MainLayout","showModal","accessKey","setState","state","data","props","getChallenge","a","FetchData","settings","url","operation","username","user","then","res","success","md5","result","token","componentDidUpdate","prevProps","render","children","createSettings","Promise","resolve","reject","method","fetch","encodeFormData","header","Mode","ok","json","err","console","warn","e","body","headers","Object","keys","map","key","encodeURIComponent","join","mapDispatchToProps","mapStateToProps","log"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport SettingsModal from \"../components/SettingsModal\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { SetSettings, SetCredential } from \"../redux/action\";\r\n\r\nclass MainLayout extends Component {\r\n  state = {\r\n    showModal: false,\r\n    accessKey: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showModal: !this.state.showModal,\r\n      accessKey: \"\",\r\n    });\r\n  };\r\n\r\n  createSettings = (data) => {\r\n    this.setState({ ...this.state, showModal: !this.state.showModal });\r\n    this.props.SetSettings(data);\r\n  };\r\n\r\n  getChallenge() {\r\n    let a = FetchData(this.props.settings.url, {\r\n      operation: \"getchallenge\",\r\n      username: this.props.settings.user,\r\n    }).then((res) => {\r\n      if (res.success) {\r\n        this.setState({\r\n          ...this.state,\r\n          accessKey: md5(res.result.token + this.props.settings.accessKey),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.settings !== this.props.settings) {\r\n      this.getChallenge();\r\n    }\r\n    if (accessKey) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navigation Show={this.showModal} />\r\n        {this.props.children}\r\n        {this.state.showModal && (\r\n          <SettingsModal SetSettings={this.createSettings} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet FetchData = (url, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    switch (method) {\r\n      case \"GET\":\r\n        fetch(url + `/webservice.php?${encodeFormData(data)}`, {\r\n          header: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            Mode: \"no-cors\",\r\n          },\r\n        })\r\n          .then((res) => {\r\n            try {\r\n              if (res.ok) return res.json();\r\n            } catch (err) {\r\n              console.warn(e);\r\n            }\r\n          })\r\n          .then((data) => {\r\n            resolve(data);\r\n          });\r\n        break;\r\n      case \"POST\":\r\n        let body = encodeFormData({\r\n          operation: \"login\",\r\n          username: data.user,\r\n          accessKey: data.accessKey,\r\n        });\r\n        fetch(settings.url + `/webservice.php`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          body: body,\r\n        })\r\n          .then((res) => {\r\n            try {\r\n              if (res.ok) return res.json();\r\n            } catch (err) {\r\n              console.warn(e);\r\n            }\r\n          })\r\n          .then((data) => {\r\n            resolve(data);\r\n          });\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nconst encodeFormData = (data) => {\r\n  return Object.keys(data)\r\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n    .join(\"&\");\r\n};\r\n\r\nconst mapDispatchToProps = { SetSettings };\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    settings: state.settings,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\r\n"]},"metadata":{},"sourceType":"module"}