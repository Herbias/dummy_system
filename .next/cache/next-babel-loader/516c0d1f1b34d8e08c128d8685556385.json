{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MainLayout from \"../Layouts/MainLayout\";\nimport UserInformation from \"../components/UserInformation\";\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      message: \"\"\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.settings.url === \"\" || this.props.settings.user === \"\" || this.props.settings.accesKey === \"\" || this.props.credentials.sessionName === \"\" || this.props.credentials.userId === \"\") {\n        if (this.state.message.style != \"text-red-500\") this.setState({\n          message: {\n            style: \"text-red-500\",\n            str: \"It seems web services is not configure correctly\"\n          }\n        });\n      } else {\n        this.setState({\n          style: \"text-green-500\",\n          str: \"Welcome to VTiger Web Services\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(MainLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"p-4 shadow rounded bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, __jsx(\"h1\", {\n        className: this.state.message.style + \" leading-normal mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \" \", this.state.message.str), this.props.credentials.userId != \"\" && __jsx(UserInformation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 51\n        }\n      })));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.settings,\n    credentials: state.credentials\n  };\n};\n\nexport default connect(mapStateToProps)(Index);","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/pages/index.js"],"names":["Component","connect","MainLayout","UserInformation","Index","message","props","settings","url","user","accesKey","credentials","sessionName","userId","state","style","setState","str","mapStateToProps"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;IAEMC,K;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;;;;;yCAIa;AACnB,UACE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,KAA4B,EAA5B,IACA,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,IAApB,KAA6B,EAD7B,IAEA,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,QAApB,KAAiC,EAFjC,IAGA,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,WAAvB,KAAuC,EAHvC,IAIA,KAAKN,KAAL,CAAWK,WAAX,CAAuBE,MAAvB,KAAkC,EALpC,EAME;AACA,YAAI,KAAKC,KAAL,CAAWT,OAAX,CAAmBU,KAAnB,IAA4B,cAAhC,EACE,KAAKC,QAAL,CAAc;AACZX,UAAAA,OAAO,EAAE;AACPU,YAAAA,KAAK,EAAE,cADA;AAEPE,YAAAA,GAAG,EAAE;AAFE;AADG,SAAd;AAMH,OAdD,MAcO;AACL,aAAKD,QAAL,CAAc;AACZD,UAAAA,KAAK,EAAE,gBADK;AAEZE,UAAAA,GAAG,EAAE;AAFO,SAAd;AAID;AACF;;;6BAEQ;AACP,aACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWT,OAAX,CAAmBU,KAAnB,GAA2B,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEG,KAAKD,KAAL,CAAWT,OAAX,CAAmBY,GAFtB,CADF,EAKG,KAAKX,KAAL,CAAWK,WAAX,CAAuBE,MAAvB,IAAiC,EAAjC,IAAuC,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAL1C,CADF,CADF;AAWD;;;;EAxCiBb,S;;AA2CpB,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD,EAAW;AACjC,SAAO;AACLP,IAAAA,QAAQ,EAAEO,KAAK,CAACP,QADX;AAELI,IAAAA,WAAW,EAAEG,KAAK,CAACH;AAFd,GAAP;AAID,CALD;;AAOA,eAAeV,OAAO,CAACiB,eAAD,CAAP,CAAyBd,KAAzB,CAAf","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MainLayout from \"../Layouts/MainLayout\";\r\nimport UserInformation from \"../components/UserInformation\";\r\n\r\nclass Index extends Component {\r\n  state = {\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      this.props.settings.url === \"\" ||\r\n      this.props.settings.user === \"\" ||\r\n      this.props.settings.accesKey === \"\" ||\r\n      this.props.credentials.sessionName === \"\" ||\r\n      this.props.credentials.userId === \"\"\r\n    ) {\r\n      if (this.state.message.style != \"text-red-500\")\r\n        this.setState({\r\n          message: {\r\n            style: \"text-red-500\",\r\n            str: \"It seems web services is not configure correctly\",\r\n          },\r\n        });\r\n    } else {\r\n      this.setState({\r\n        style: \"text-green-500\",\r\n        str: \"Welcome to VTiger Web Services\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"p-4 shadow rounded bg-white\">\r\n          <h1 className={this.state.message.style + \" leading-normal mb-2\"}>\r\n            {\" \"}\r\n            {this.state.message.str}\r\n          </h1>\r\n          {this.props.credentials.userId != \"\" && <UserInformation />}\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    credentials: state.credentials,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Index);\r\n"]},"metadata":{},"sourceType":"module"}