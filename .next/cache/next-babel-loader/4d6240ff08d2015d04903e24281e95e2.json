{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\pages\\\\tickets.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport MainLayout from \"../Layouts/MainLayout\";\nimport { connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport { FetchData } from \"../utils/helper\";\n\nvar Row = function Row(_ref) {\n  var data = _ref.data;\n  return __jsx(React.Fragment, null, data.map(function (data, i) {\n    return __jsx(\"tr\", {\n      key: i,\n      id: data.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, data.id.replace(/.(\\d[x])/, \"\")), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, data.ticket_no), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, data.ticket_title), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, data.ticketpriorities), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, data.ticketstatus));\n  }));\n};\n\n_c = Row;\n\nvar tickets = /*#__PURE__*/function (_Component) {\n  _inherits(tickets, _Component);\n\n  var _super = _createSuper(tickets);\n\n  function tickets() {\n    var _this2;\n\n    _classCallCheck(this, tickets);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      list: []\n    });\n\n    return _this2;\n  }\n\n  _createClass(tickets, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      FetchData(\"GET\", this.props.settings.url, {\n        operation: \"query\",\n        sessionName: this.props.credentials.sessionName,\n        query: \"SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;\"\n      }).then(function (res) {\n        _this3.setState({\n          list: res.result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(MainLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"p-4 shadow rounded bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, \"Tickets\"), __jsx(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, __jsx(\"table\", {\n        className: \"table-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"ID\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"Number\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Title\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, \"Organization\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Priority\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, \"Status\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"Assigned To\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, \"Modified By\"))))))));\n    }\n  }]);\n\n  return tickets;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.settings,\n    credentials: state.credentials,\n    userInfo: state.userInfo\n  };\n};\n\nexport default connect(mapStateToProps)(tickets);\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/pages/tickets.js"],"names":["MainLayout","connect","Component","FetchData","Row","data","map","i","id","replace","ticket_no","ticket_title","ticketpriorities","ticketstatus","tickets","list","props","settings","url","operation","sessionName","credentials","query","then","res","setState","result","mapStateToProps","state","userInfo"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACxB,SACE,4BACGA,IAAI,CAACC,GAAL,CAAS,UAACD,IAAD,EAAOE,CAAP,EAAa;AACrB,WACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,EAAE,EAAEF,IAAI,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,IAAI,CAACG,EAAL,CAAQC,OAAR,CAAgB,UAAhB,EAA4B,EAA5B,CADH,CADF,EAIE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCJ,IAAI,CAACK,SAAvC,CAJF,EAKE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCL,IAAI,CAACM,YAAvC,CALF,EAOE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCN,IAAI,CAACO,gBAAvC,CAPF,EAQE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCP,IAAI,CAACQ,YAAvC,CARF,CADF;AAcD,GAfA,CADH,CADF;AAoBD,CArBD;;KAAMT,G;;IAuBAU,O;;;;;;;;;;;;;;;;6DACI;AACNC,MAAAA,IAAI,EAAE;AADA,K;;;;;;;wCAIY;AAAA;;AAClBZ,MAAAA,SAAS,CAAC,KAAD,EAAQ,KAAKa,KAAL,CAAWC,QAAX,CAAoBC,GAA5B,EAAiC;AACxCC,QAAAA,SAAS,EAAE,OAD6B;AAExCC,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAAX,CAAuBD,WAFI;AAGxCE,QAAAA,KAAK;AAHmC,OAAjC,CAAT,CAIGC,IAJH,CAIQ,UAACC,GAAD,EAAS;AACf,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEV,UAAAA,IAAI,EAAES,GAAG,CAACE;AAAZ,SAAd;AACD,OAND;AAOD;;;6BACQ;AACP,aACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAME;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAQE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,CADF,CADF,CADF,CADF,CAFF,CADF,CADF;AA6BD;;;;EA5CmBxB,S;;AA+CtB,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLX,IAAAA,QAAQ,EAAEW,KAAK,CAACX,QADX;AAELI,IAAAA,WAAW,EAAEO,KAAK,CAACP,WAFd;AAGLQ,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAHX,GAAP;AAKD,CAND;;AAQA,eAAe5B,OAAO,CAAC0B,eAAD,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["import MainLayout from \"../Layouts/MainLayout\";\r\nimport { connect } from \"react-redux\";\r\nimport { Component } from \"react\";\r\nimport { FetchData } from \"../utils/helper\";\r\n\r\nconst Row = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.map((data, i) => {\r\n        return (\r\n          <tr key={i} id={data.id}>\r\n            <td className=\"border px-4 py-2\">\r\n              {data.id.replace(/.(\\d[x])/, \"\")}\r\n            </td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_no}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_title}</td>\r\n            {/* <Cell id={data.parent_id} /> */}\r\n            <td className=\"border px-4 py-2\">{data.ticketpriorities}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticketstatus}</td>\r\n            {/* <Cell id={data.assigned_user_id} /> */}\r\n            {/* <Cell id={data.modifiedby} /> */}\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nclass tickets extends Component {\r\n  state = {\r\n    list: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    FetchData(\"GET\", this.props.settings.url, {\r\n      operation: \"query\",\r\n      sessionName: this.props.credentials.sessionName,\r\n      query: `SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;`,\r\n    }).then((res) => {\r\n      this.setState({ list: res.result });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"p-4 shadow rounded bg-white\">\r\n          <h1>Tickets</h1>\r\n          <div className=\"flex\">\r\n            <div>\r\n              <table className=\"table-auto\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"px-4 py-2\">ID</th>\r\n                    <th className=\"px-4 py-2\">Number</th>\r\n                    <th className=\"px-4 py-2\">Title</th>\r\n                    <th className=\"px-4 py-2\">Organization</th>\r\n                    <th className=\"px-4 py-2\">Priority</th>\r\n                    <th className=\"px-4 py-2\">Status</th>\r\n                    <th className=\"px-4 py-2\">Assigned To</th>\r\n                    <th className=\"px-4 py-2\">Modified By</th>\r\n                  </tr>\r\n                </thead>\r\n                {/* <tbody>{list && <Row data={list} />}</tbody> */}\r\n              </table>\r\n            </div>\r\n            {/* <div className=\"shadow rounded p-4 ml-2\">\r\n                  <h1>Add new record</h1>\r\n                </div> */}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    credentials: state.credentials,\r\n    userInfo: state.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(tickets);\r\n"]},"metadata":{},"sourceType":"module"}