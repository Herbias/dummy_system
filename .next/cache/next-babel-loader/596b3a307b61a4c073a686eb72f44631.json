{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\Layouts\\\\MainLayout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from \"react\";\nimport Navigation from \"../components/Navigation\";\nimport SettingsModal from \"../components/SettingsModal\";\nimport { connect } from \"react-redux\";\nimport { SetSettings, SetCredential } from \"../redux/action\";\n\nclass MainLayout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showModal: false\n    });\n\n    _defineProperty(this, \"showModal\", () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        showModal: !this.state.showModal\n      }));\n    });\n\n    _defineProperty(this, \"createSettings\", data => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        showModal: !this.state.showModal\n      }));\n      this.props.SetSettings(data);\n    });\n\n    _defineProperty(this, \"getChallenge\", data => {\n      fetch(this.props.settings.url + `/webservice.php?${encodeFormData({\n        data\n      })}`, {\n        header: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Mode: \"no-cors\"\n        }\n      }).then(res => {\n        try {\n          if (res.ok) return res.json();\n        } catch (err) {\n          console.warn(e);\n        }\n      }).then(data => {\n        console.log(data);\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.settings !== this.props.settings) {\n      this.getChallenge({\n        operation: \"getchallenge\",\n        username: this.props.settings.user\n      });\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Navigation, {\n      Show: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), this.props.children, this.state.showModal && __jsx(SettingsModal, {\n      SetSettings: this.createSettings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst encodeFormData = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst mapDispatchToProps = {\n  SetSettings\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    settings: state.settings\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/Layouts/MainLayout.js"],"names":["Component","Navigation","SettingsModal","connect","SetSettings","SetCredential","MainLayout","showModal","setState","state","data","props","fetch","settings","url","encodeFormData","header","Mode","then","res","ok","json","err","console","warn","e","log","componentDidUpdate","prevProps","getChallenge","operation","username","user","render","children","createSettings","Object","keys","map","key","encodeURIComponent","join","mapDispatchToProps","mapStateToProps"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport SettingsModal from \"../components/SettingsModal\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { SetSettings, SetCredential } from \"../redux/action\";\r\n\r\nclass MainLayout extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showModal: !this.state.showModal,\r\n    });\r\n  };\r\n\r\n  createSettings = (data) => {\r\n    this.setState({ ...this.state, showModal: !this.state.showModal });\r\n    this.props.SetSettings(data);\r\n  };\r\n\r\n  getChallenge = (data) => {\r\n    fetch(\r\n      this.props.settings.url + `/webservice.php?${encodeFormData({ data })}`,\r\n      {\r\n        header: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          Mode: \"no-cors\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        try {\r\n          if (res.ok) return res.json();\r\n        } catch (err) {\r\n          console.warn(e);\r\n        }\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.settings !== this.props.settings) {\r\n      this.getChallenge({\r\n        operation: \"getchallenge\",\r\n        username: this.props.settings.user,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navigation Show={this.showModal} />\r\n        {this.props.children}\r\n        {this.state.showModal && (\r\n          <SettingsModal SetSettings={this.createSettings} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst encodeFormData = (data) => {\r\n  return Object.keys(data)\r\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n    .join(\"&\");\r\n};\r\n\r\nconst mapDispatchToProps = { SetSettings };\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    settings: state.settings,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\r\n"]},"metadata":{},"sourceType":"module"}