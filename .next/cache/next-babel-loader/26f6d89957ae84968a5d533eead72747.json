{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\Layouts\\\\MainLayout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from \"react\";\nimport Navigation from \"../components/Navigation\";\nimport SettingsModal from \"../components/SettingsModal\";\nimport { connect } from \"react-redux\";\nimport md5 from \"md5\";\nimport { SetSettings, SetCredential, SetUserInfo } from \"../redux/action\";\n\nclass MainLayout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showModal: false,\n      accessKey: \"\"\n    });\n\n    _defineProperty(this, \"showModal\", () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        showModal: !this.state.showModal,\n        accessKey: \"\"\n      }));\n    });\n\n    _defineProperty(this, \"createSettings\", data => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        showModal: !this.state.showModal\n      }));\n      this.props.SetSettings(data);\n    });\n  }\n\n  getChallenge() {\n    let a = FetchData(\"GET\", this.props.settings.url, {\n      operation: \"getchallenge\",\n      username: this.props.settings.user\n    }).then(res => {\n      if (res.success) {\n        this.getCredential(md5(res.result.token + this.props.settings.accessKey)); // this.setState({\n        //   ...this.state,\n        //   accessKey: md5(res.result.token + this.props.settings.accessKey),\n        // });\n      }\n    });\n  }\n\n  getCredential(accessKey) {\n    let a = FetchData(\"POST\", this.props.settings.url, {\n      operation: \"login\",\n      username: this.props.settings.user,\n      accessKey: accessKey\n    }).then(res => {\n      if (res.success) this.props.SetCredential({\n        sessionName: res.result.sessionName,\n        userId: res.result.userId\n      });\n    });\n  }\n\n  getUserInfo() {\n    let a = FetchData(\"GET\", this.props.settings.url, {\n      operation: \"query\",\n      sessionName: this.props.credentials.sessionName,\n      query: `SELECT user_name, first_name, last_name FROM Users WHERE id = ${this.props.credentials.userId};`\n    }).then(res => {\n      if (res.success) {\n        this.props.SetUserInfo(res.result);\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.settings !== this.props.settings) {\n      this.getChallenge();\n    }\n\n    if (prevProps.credentials !== this.props.credentials) {\n      this.getUserInfo();\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Navigation, {\n      Show: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), this.props.children, this.state.showModal && __jsx(SettingsModal, {\n      SetSettings: this.createSettings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nlet FetchData = (method, url, data) => {\n  return new Promise((resolve, reject) => {\n    switch (method) {\n      case \"GET\":\n        fetch(url + `/webservice.php?${encodeFormData(data)}`, {\n          header: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            Mode: \"no-cors\"\n          }\n        }).then(res => {\n          try {\n            if (res.ok) return res.json();\n          } catch (err) {\n            console.warn(e);\n          }\n        }).then(data => {\n          resolve(data);\n        });\n        break;\n\n      case \"POST\":\n        let body = encodeFormData({\n          operation: \"login\",\n          username: data.username,\n          accessKey: data.accessKey\n        });\n        fetch(url + `/webservice.php`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: body\n        }).then(res => {\n          try {\n            if (res.ok) return res.json();\n          } catch (err) {\n            console.warn(e);\n          }\n        }).then(data => {\n          resolve(data);\n        });\n        break;\n    }\n  });\n};\n\nconst encodeFormData = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst mapDispatchToProps = {\n  SetSettings,\n  SetCredential,\n  SetUserInfo\n};\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings,\n    credentials: state.credentials,\n    userInfo: state.userInfo\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/Layouts/MainLayout.js"],"names":["Component","Navigation","SettingsModal","connect","md5","SetSettings","SetCredential","SetUserInfo","MainLayout","showModal","accessKey","setState","state","data","props","getChallenge","a","FetchData","settings","url","operation","username","user","then","res","success","getCredential","result","token","sessionName","userId","getUserInfo","credentials","query","componentDidUpdate","prevProps","render","children","createSettings","method","Promise","resolve","reject","fetch","encodeFormData","header","Mode","ok","json","err","console","warn","e","body","headers","Object","keys","map","key","encodeURIComponent","join","mapDispatchToProps","mapStateToProps","userInfo"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport SettingsModal from \"../components/SettingsModal\";\r\nimport { connect } from \"react-redux\";\r\nimport md5 from \"md5\";\r\n\r\nimport { SetSettings, SetCredential, SetUserInfo } from \"../redux/action\";\r\n\r\nclass MainLayout extends Component {\r\n  state = {\r\n    showModal: false,\r\n    accessKey: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showModal: !this.state.showModal,\r\n      accessKey: \"\",\r\n    });\r\n  };\r\n\r\n  createSettings = (data) => {\r\n    this.setState({ ...this.state, showModal: !this.state.showModal });\r\n    this.props.SetSettings(data);\r\n  };\r\n\r\n  getChallenge() {\r\n    let a = FetchData(\"GET\", this.props.settings.url, {\r\n      operation: \"getchallenge\",\r\n      username: this.props.settings.user,\r\n    }).then((res) => {\r\n      if (res.success) {\r\n        this.getCredential(\r\n          md5(res.result.token + this.props.settings.accessKey)\r\n        );\r\n        // this.setState({\r\n        //   ...this.state,\r\n        //   accessKey: md5(res.result.token + this.props.settings.accessKey),\r\n        // });\r\n      }\r\n    });\r\n  }\r\n\r\n  getCredential(accessKey) {\r\n    let a = FetchData(\"POST\", this.props.settings.url, {\r\n      operation: \"login\",\r\n      username: this.props.settings.user,\r\n      accessKey: accessKey,\r\n    }).then((res) => {\r\n      if (res.success)\r\n        this.props.SetCredential({\r\n          sessionName: res.result.sessionName,\r\n          userId: res.result.userId,\r\n        });\r\n    });\r\n  }\r\n\r\n  getUserInfo() {\r\n    let a = FetchData(\"GET\", this.props.settings.url, {\r\n      operation: \"query\",\r\n      sessionName: this.props.credentials.sessionName,\r\n      query: `SELECT user_name, first_name, last_name FROM Users WHERE id = ${this.props.credentials.userId};`,\r\n    }).then((res) => {\r\n      if (res.success) {\r\n        this.props.SetUserInfo(res.result);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.settings !== this.props.settings) {\r\n      this.getChallenge();\r\n    }\r\n\r\n    if (prevProps.credentials !== this.props.credentials) {\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navigation Show={this.showModal} />\r\n        {this.props.children}\r\n        {this.state.showModal && (\r\n          <SettingsModal SetSettings={this.createSettings} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet FetchData = (method, url, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    switch (method) {\r\n      case \"GET\":\r\n        fetch(url + `/webservice.php?${encodeFormData(data)}`, {\r\n          header: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            Mode: \"no-cors\",\r\n          },\r\n        })\r\n          .then((res) => {\r\n            try {\r\n              if (res.ok) return res.json();\r\n            } catch (err) {\r\n              console.warn(e);\r\n            }\r\n          })\r\n          .then((data) => {\r\n            resolve(data);\r\n          });\r\n        break;\r\n      case \"POST\":\r\n        let body = encodeFormData({\r\n          operation: \"login\",\r\n          username: data.username,\r\n          accessKey: data.accessKey,\r\n        });\r\n\r\n        fetch(url + `/webservice.php`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          body: body,\r\n        })\r\n          .then((res) => {\r\n            try {\r\n              if (res.ok) return res.json();\r\n            } catch (err) {\r\n              console.warn(e);\r\n            }\r\n          })\r\n          .then((data) => {\r\n            resolve(data);\r\n          });\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nconst encodeFormData = (data) => {\r\n  return Object.keys(data)\r\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n    .join(\"&\");\r\n};\r\n\r\nconst mapDispatchToProps = { SetSettings, SetCredential, SetUserInfo };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    credentials: state.credentials,\r\n    userInfo: state.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\r\n"]},"metadata":{},"sourceType":"module"}