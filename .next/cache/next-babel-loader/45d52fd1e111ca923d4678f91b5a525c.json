{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\pages\\\\tickets.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport MainLayout from \"../Layouts/MainLayout\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Component } from \"react\";\nimport { FetchData } from \"../utils/helper\";\nimport { useState, useEffect } from \"react\";\n\nvar GetQueryData = function GetQueryData(id) {\n  _s();\n\n  var _useState = useState({}),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    if (id == 11) setData({\n      column: \"accountname\",\n      name: \"Accounts\"\n    });\n    if (id == 19) setData({\n      column: \"user_name\",\n      name: \"Users\"\n    });\n    if (id == 20) setData({\n      column: \"groupname\",\n      name: \"Groups\"\n    });\n  }, []);\n  return data;\n};\n\n_s(GetQueryData, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = GetQueryData;\n\nvar Cell = function Cell(_ref) {\n  _s2();\n\n  var id = _ref.id;\n  var credentials = useSelector(function (state) {\n    return state.credentials;\n  });\n  var settings = useSelector(function (state) {\n    return state.settings;\n  });\n  var queryData = GetQueryData(id.replace(/([x]\\d).*/, \"\"));\n\n  var _useState2 = useState(\"\"),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      cellData = _useState3[0],\n      setCellData = _useState3[1];\n\n  useEffect(function () {\n    setResult(\"SELECT \".concat(queryData.column, \" FROM \").concat(queryData.name, \" WHERE id = \").concat(id, \";\"));\n  }, [queryData]);\n  useEffect(function () {\n    FetchData(\"GET\", settings.url, {\n      operation: \"query\",\n      sessionName: credentials.sessionName,\n      query: result\n    }).then(function (res) {\n      console.log(res);\n    }); //   fetch(\n    //     settings.url +\n    //       `/webservice.php?${encodeFormData({\n    //         operation: \"query\",\n    //         sessionName: credentials.sessionName,\n    //         query: result,\n    //       })}`,\n    //     {\n    //       header: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\",\n    //         Mode: \"no-cors\",\n    //       },\n    //     }\n    //   )\n    //     .then((res) => {\n    //       try {\n    //         if (res.ok) return res.json();\n    //       } catch (err) {\n    //         console.warn(e);\n    //       }\n    //     })\n    //     .then((data) => {\n    //       setCellData(data.result);\n    //     });\n  }, [result]);\n  return __jsx(React.Fragment, null, __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, cellData ? cellData[0][Object.keys(cellData[0])[0]] : \"\"));\n};\n\n_s2(Cell, \"gWEE/AhEr3lRHONaodJFVsn7CNk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c2 = Cell;\n\nvar Row = function Row(_ref2) {\n  var data = _ref2.data;\n  return __jsx(React.Fragment, null, data.map(function (data, i) {\n    return __jsx(\"tr\", {\n      key: i,\n      id: data.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, data.id.replace(/.(\\d[x])/, \"\")), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, data.ticket_no), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, data.ticket_title), __jsx(Cell, {\n      id: data.parent_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, data.ticketpriorities), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, data.ticketstatus), __jsx(Cell, {\n      id: data.assigned_user_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), __jsx(Cell, {\n      id: data.modifiedby,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }));\n  }));\n};\n\n_c3 = Row;\n\nvar tickets = /*#__PURE__*/function (_Component) {\n  _inherits(tickets, _Component);\n\n  var _super = _createSuper(tickets);\n\n  function tickets() {\n    var _this2;\n\n    _classCallCheck(this, tickets);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      list: []\n    });\n\n    return _this2;\n  }\n\n  _createClass(tickets, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      FetchData(\"GET\", this.props.settings.url, {\n        operation: \"query\",\n        sessionName: this.props.credentials.sessionName,\n        query: \"SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;\"\n      }).then(function (res) {\n        _this3.setState({\n          list: res.result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(MainLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"p-4 shadow rounded bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, \"Tickets\"), __jsx(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, __jsx(\"table\", {\n        className: \"table-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"ID\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, \"Number\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, \"Title\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Organization\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"Priority\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"Status\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, \"Assigned To\"), __jsx(\"th\", {\n        className: \"px-4 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, \"Modified By\"))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, this.state.list && __jsx(Row, {\n        data: this.state.list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 39\n        }\n      })))))));\n    }\n  }]);\n\n  return tickets;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.settings,\n    credentials: state.credentials,\n    userInfo: state.userInfo\n  };\n};\n\nexport default connect(mapStateToProps)(tickets);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetQueryData\");\n$RefreshReg$(_c2, \"Cell\");\n$RefreshReg$(_c3, \"Row\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/pages/tickets.js"],"names":["MainLayout","connect","useSelector","Component","FetchData","useState","useEffect","GetQueryData","id","data","setData","column","name","Cell","credentials","state","settings","queryData","replace","result","setResult","cellData","setCellData","url","operation","sessionName","query","then","res","console","log","Object","keys","Row","map","i","ticket_no","ticket_title","parent_id","ticketpriorities","ticketstatus","assigned_user_id","modifiedby","tickets","list","props","setState","mapStateToProps","userInfo"],"mappings":"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","sourcesContent":["import MainLayout from \"../Layouts/MainLayout\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Component } from \"react\";\r\nimport { FetchData } from \"../utils/helper\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst GetQueryData = (id) => {\r\n  const [data, setData] = useState({});\r\n  useEffect(() => {\r\n    if (id == 11) setData({ column: \"accountname\", name: \"Accounts\" });\r\n    if (id == 19) setData({ column: \"user_name\", name: \"Users\" });\r\n    if (id == 20) setData({ column: \"groupname\", name: \"Groups\" });\r\n  }, []);\r\n  return data;\r\n};\r\n\r\nconst Cell = ({ id }) => {\r\n  let credentials = useSelector((state) => state.credentials);\r\n  let settings = useSelector((state) => state.settings);\r\n  let queryData = GetQueryData(id.replace(/([x]\\d).*/, \"\"));\r\n  const [result, setResult] = useState(\"\");\r\n  const [cellData, setCellData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setResult(\r\n      `SELECT ${queryData.column} FROM ${queryData.name} WHERE id = ${id};`\r\n    );\r\n  }, [queryData]);\r\n\r\n  useEffect(() => {\r\n    FetchData(\"GET\", settings.url, {\r\n      operation: \"query\",\r\n      sessionName: credentials.sessionName,\r\n      query: result,\r\n    }).then((res) => {\r\n      console.log(res);\r\n    });\r\n    //   fetch(\r\n    //     settings.url +\r\n    //       `/webservice.php?${encodeFormData({\r\n    //         operation: \"query\",\r\n    //         sessionName: credentials.sessionName,\r\n    //         query: result,\r\n    //       })}`,\r\n    //     {\r\n    //       header: {\r\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    //         Mode: \"no-cors\",\r\n    //       },\r\n    //     }\r\n    //   )\r\n    //     .then((res) => {\r\n    //       try {\r\n    //         if (res.ok) return res.json();\r\n    //       } catch (err) {\r\n    //         console.warn(e);\r\n    //       }\r\n    //     })\r\n    //     .then((data) => {\r\n    //       setCellData(data.result);\r\n    //     });\r\n  }, [result]);\r\n  return (\r\n    <>\r\n      <td className=\"border px-4 py-2\">\r\n        {cellData ? cellData[0][Object.keys(cellData[0])[0]] : \"\"}\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Row = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.map((data, i) => {\r\n        return (\r\n          <tr key={i} id={data.id}>\r\n            <td className=\"border px-4 py-2\">\r\n              {data.id.replace(/.(\\d[x])/, \"\")}\r\n            </td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_no}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_title}</td>\r\n            <Cell id={data.parent_id} />\r\n            <td className=\"border px-4 py-2\">{data.ticketpriorities}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticketstatus}</td>\r\n            <Cell id={data.assigned_user_id} />\r\n            <Cell id={data.modifiedby} />\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nclass tickets extends Component {\r\n  state = {\r\n    list: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    FetchData(\"GET\", this.props.settings.url, {\r\n      operation: \"query\",\r\n      sessionName: this.props.credentials.sessionName,\r\n      query: `SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;`,\r\n    }).then((res) => {\r\n      this.setState({ list: res.result });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"p-4 shadow rounded bg-white\">\r\n          <h1>Tickets</h1>\r\n          <div className=\"flex\">\r\n            <div>\r\n              <table className=\"table-auto\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"px-4 py-2\">ID</th>\r\n                    <th className=\"px-4 py-2\">Number</th>\r\n                    <th className=\"px-4 py-2\">Title</th>\r\n                    <th className=\"px-4 py-2\">Organization</th>\r\n                    <th className=\"px-4 py-2\">Priority</th>\r\n                    <th className=\"px-4 py-2\">Status</th>\r\n                    <th className=\"px-4 py-2\">Assigned To</th>\r\n                    <th className=\"px-4 py-2\">Modified By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.list && <Row data={this.state.list} />}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <div className=\"shadow rounded p-4 ml-2\">\r\n                  <h1>Add new record</h1>\r\n                </div> */}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    credentials: state.credentials,\r\n    userInfo: state.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(tickets);\r\n"]},"metadata":{},"sourceType":"module"}