{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\DummySystem\\\\VGL\\\\pages\\\\tickets.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MainLayout from \"../Layouts/MainLayout\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Component } from \"react\";\nimport { FetchData } from \"../utils/helper\";\nimport { useState, useEffect } from \"react\";\n\nconst GetQueryData = id => {\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  useEffect(() => {\n    if (id == 11) setData({\n      column: \"accountname\",\n      name: \"Accounts\"\n    });\n    if (id == 19) setData({\n      column: \"user_name\",\n      name: \"Users\"\n    });\n    if (id == 20) setData({\n      column: \"groupname\",\n      name: \"Groups\"\n    });\n  }, []);\n  return data;\n};\n\nconst Cell = ({\n  id\n}) => {\n  let credentials = useSelector(state => state.credentials);\n  let settings = useSelector(state => state.settings);\n  let queryData = GetQueryData(id.replace(/([x]\\d).*/, \"\"));\n  const {\n    0: result,\n    1: setResult\n  } = useState(\"\");\n  const {\n    0: cellData,\n    1: setCellData\n  } = useState(\"\");\n  useEffect(() => {\n    setResult(`SELECT ${queryData.column} FROM ${queryData.name} WHERE id = ${id};`);\n  }, [queryData]);\n  useEffect(() => {\n    FetchData(\"GET\", settings.url, {\n      operation: \"query\",\n      sessionName: credentials.sessionName,\n      query: result\n    }).then(res => {\n      setCellData(res.result);\n    });\n  }, [result]);\n  return __jsx(React.Fragment, null, __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, cellData ? cellData[0][Object.keys(cellData[0])[0]] : \"\"));\n};\n\nconst Row = ({\n  data\n}) => {\n  return __jsx(React.Fragment, null, data.map((data, i) => {\n    return __jsx(\"tr\", {\n      key: i,\n      id: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, data.id.replace(/.(\\d[x])/, \"\")), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, data.ticket_no), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, data.ticket_title), __jsx(Cell, {\n      id: data.parent_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, data.ticketpriorities), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, data.ticketstatus), __jsx(Cell, {\n      id: data.assigned_user_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), __jsx(Cell, {\n      id: data.modifiedby,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }));\n  }));\n};\n\nclass tickets extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      list: []\n    });\n  }\n\n  componentDidMount() {\n    FetchData(\"GET\", this.props.settings.url, {\n      operation: \"query\",\n      sessionName: this.props.credentials.sessionName,\n      query: `SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;`\n    }).then(res => {\n      this.setState({\n        list: res.result\n      });\n    });\n  }\n\n  render() {\n    return __jsx(MainLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"p-4 shadow rounded bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Tickets\"), __jsx(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(\"table\", {\n      className: \"table-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"ID\"), __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Number\"), __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Title\"), __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Organization\"), __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Priority\"), __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Status\"), __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Assigned To\"), __jsx(\"th\", {\n      className: \"px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Modified By\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, this.state.list && __jsx(Row, {\n      data: this.state.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 39\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings,\n    credentials: state.credentials,\n    userInfo: state.userInfo\n  };\n};\n\nexport default connect(mapStateToProps)(tickets);","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/DummySystem/VGL/pages/tickets.js"],"names":["MainLayout","connect","useSelector","Component","FetchData","useState","useEffect","GetQueryData","id","data","setData","column","name","Cell","credentials","state","settings","queryData","replace","result","setResult","cellData","setCellData","url","operation","sessionName","query","then","res","Object","keys","Row","map","i","ticket_no","ticket_title","parent_id","ticketpriorities","ticketstatus","assigned_user_id","modifiedby","tickets","list","componentDidMount","props","setState","render","mapStateToProps","userInfo"],"mappings":"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","sourcesContent":["import MainLayout from \"../Layouts/MainLayout\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Component } from \"react\";\r\nimport { FetchData } from \"../utils/helper\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst GetQueryData = (id) => {\r\n  const [data, setData] = useState({});\r\n  useEffect(() => {\r\n    if (id == 11) setData({ column: \"accountname\", name: \"Accounts\" });\r\n    if (id == 19) setData({ column: \"user_name\", name: \"Users\" });\r\n    if (id == 20) setData({ column: \"groupname\", name: \"Groups\" });\r\n  }, []);\r\n  return data;\r\n};\r\n\r\nconst Cell = ({ id }) => {\r\n  let credentials = useSelector((state) => state.credentials);\r\n  let settings = useSelector((state) => state.settings);\r\n  let queryData = GetQueryData(id.replace(/([x]\\d).*/, \"\"));\r\n  const [result, setResult] = useState(\"\");\r\n  const [cellData, setCellData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setResult(\r\n      `SELECT ${queryData.column} FROM ${queryData.name} WHERE id = ${id};`\r\n    );\r\n  }, [queryData]);\r\n\r\n  useEffect(() => {\r\n    FetchData(\"GET\", settings.url, {\r\n      operation: \"query\",\r\n      sessionName: credentials.sessionName,\r\n      query: result,\r\n    }).then((res) => {\r\n      setCellData(res.result);\r\n    });\r\n  }, [result]);\r\n  return (\r\n    <>\r\n      <td className=\"border px-4 py-2\">\r\n        {cellData ? cellData[0][Object.keys(cellData[0])[0]] : \"\"}\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Row = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.map((data, i) => {\r\n        return (\r\n          <tr key={i} id={data.id}>\r\n            <td className=\"border px-4 py-2\">\r\n              {data.id.replace(/.(\\d[x])/, \"\")}\r\n            </td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_no}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticket_title}</td>\r\n            <Cell id={data.parent_id} />\r\n            <td className=\"border px-4 py-2\">{data.ticketpriorities}</td>\r\n            <td className=\"border px-4 py-2\">{data.ticketstatus}</td>\r\n            <Cell id={data.assigned_user_id} />\r\n            <Cell id={data.modifiedby} />\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nclass tickets extends Component {\r\n  state = {\r\n    list: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    FetchData(\"GET\", this.props.settings.url, {\r\n      operation: \"query\",\r\n      sessionName: this.props.credentials.sessionName,\r\n      query: `SELECT id, ticket_no, ticket_title, parent_id, ticketpriorities, ticketstatus,assigned_user_id, modifiedby  FROM HelpDesk;`,\r\n    }).then((res) => {\r\n      this.setState({ list: res.result });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"p-4 shadow rounded bg-white\">\r\n          <h1>Tickets</h1>\r\n          <div className=\"flex\">\r\n            <div>\r\n              <table className=\"table-auto\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"px-4 py-2\">ID</th>\r\n                    <th className=\"px-4 py-2\">Number</th>\r\n                    <th className=\"px-4 py-2\">Title</th>\r\n                    <th className=\"px-4 py-2\">Organization</th>\r\n                    <th className=\"px-4 py-2\">Priority</th>\r\n                    <th className=\"px-4 py-2\">Status</th>\r\n                    <th className=\"px-4 py-2\">Assigned To</th>\r\n                    <th className=\"px-4 py-2\">Modified By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.list && <Row data={this.state.list} />}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <div className=\"shadow rounded p-4 ml-2\">\r\n                  <h1>Add new record</h1>\r\n                </div> */}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    credentials: state.credentials,\r\n    userInfo: state.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(tickets);\r\n"]},"metadata":{},"sourceType":"module"}